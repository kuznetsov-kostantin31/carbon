stages: [test, build, deploy]

variables:
  DOCKER_DRIVER: overlay2

test:
  stage: test
  image: node:20-alpine
  script:
    - npm ci --prefix backend
    - npm run test --prefix backend
    - npm ci --prefix frontend
    - npm run build --prefix frontend

build:
  stage: build
  image: docker:26.1.3
  services:
    - docker:26.1.3-dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA backend
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHORT_SHA frontend
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHORT_SHA
    # Опционально: тег latest / prod
  only:
    - main
    - tags

deploy_prod:
  stage: deploy
  image: alpine:3.20
  before_script:
    - apk add --no-cache openssh-client ansible
  script:
    - mkdir -p ~/.ssh && echo "$DEPLOY_SSH_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - export ANSIBLE_HOST_KEY_CHECKING=False
    - cd infra/ansible/playbooks
    - ansible-playbook -i ../inventories/prod/hosts.ini deploy.yml
  only:
    - tags
